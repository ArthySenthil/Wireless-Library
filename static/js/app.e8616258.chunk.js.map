{"version":3,"sources":["screens/BookTransactionScreen.js","screens/SearchScreen.js","App.js"],"names":["TransactionScreen","getCameraPermissions","a","async","Permissions","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scannedData","state","this","BarCodeScanner","onBarCodeScanned","undefined","style","StyleSheet","absoluteFillObject","View","styles","container","Text","displayText","TouchableOpacity","onPress","scanButton","buttonText","React","Component","create","flex","justifyContent","alignItems","fontSize","textDecorationLine","backgroundColor","padding","margin","SearchScreen","App","AppContainer","TabNavigator","createBottomTabNavigator","Transaction","screen","Search","createAppContainer"],"mappings":"gvBAMqBA,E,gCACnB,aAAc,IAAD,sBACX,gBASFC,qBAAuB,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACEE,IAAqBA,MADvB,gBACdC,EADc,EACdA,OAEP,EAAKC,SAAS,CACZC,qBAAgC,YAAVF,EACtBG,YAAa,UACbC,SAAS,IANU,6DAVV,EAqBbC,qBAAuB,2BAAAR,EAAAC,OAAA,kDAAOQ,KAAKC,EAAZ,EAAYA,KACjC,EAAKN,SAAS,CACZG,SAAQ,EACRI,YAAaD,EACbJ,YAAY,WAJO,6DAnBrB,EAAKM,MAAQ,CACXP,qBAAsB,KACtBE,SAAS,EACTI,YAAa,GACbL,YAAa,UANJ,E,6CA+BT,IAAMD,EAAqBQ,KAAKD,MAAMP,qBAChCE,EAAUM,KAAKD,MAAML,QACrBD,EAAcO,KAAKD,MAAMN,YAC/B,MAAmB,YAAhBA,GAA6BD,EAE5B,kBAACS,EAAA,EAAD,CACAC,iBAAoBR,OAASS,EAAWH,KAAKL,qBAC7CS,MAAOC,IAAWC,qBAIE,WAAhBb,EAGF,kBAACc,EAAA,EAAD,CAAMH,MAAQI,EAAOC,WACjB,kBAACC,EAAA,EAAD,CAAMN,MAAOI,EAAOG,cACU,IAAvBnB,EAA6BQ,KAAKD,MAAMD,YAAa,4BAD5D,KAEK,kBAACc,EAAA,EAAD,CAAkBC,QAAUb,KAAKd,qBAAsBkB,MAASI,EAAOM,YACxE,kBAACJ,EAAA,EAAD,CAAMN,MAAOI,EAAOO,YAApB,uBAPT,M,GA3CoCC,IAAMC,WA+D/CT,EAASH,IAAWa,OAAO,CAC7BT,UAAW,CACTU,KAAM,EACNC,eAAgB,SAChBC,WAAY,UAEdV,YAAY,CACVW,SAAU,GACVC,mBAAoB,aAEtBT,WAAW,CACTU,gBAAiB,UACjBC,QAAS,GACTC,OAAQ,IAEVX,WAAW,CACTO,SAAU,M,8aCjFKK,E,qIAEb,OACI,kBAACpB,EAAA,EAAD,CAAMH,MAAQ,CAACe,KAAM,EAAGC,eAAgB,SAAUC,WAAY,WAC1D,kBAACX,EAAA,EAAD,sB,GAJ0BM,IAAMC,W,8aCK3BW,E,qIAEjB,OACE,kBAACC,EAAD,U,GAH2Bb,IAAMC,WAkBjCa,GATSzB,IAAWa,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNK,gBAAiB,OACjBH,WAAY,SACZD,eAAgB,YAICW,YAAyB,CAC5CC,YAAa,CAACC,OAAQhD,GACtBiD,OAAQ,CAACD,OAAQN,MAIbE,EAAeM,6BAAmBL,I","file":"static/js/app.e8616258.chunk.js","sourcesContent":["import React from 'react';\nimport {StyleSheet, Text,View, TouchableOpacity} from 'react-native';\nimport { render } from 'react-dom';\nimport * as Permissions from 'expo-permissions';\nimport {BarCodeScanner} from 'expo-barcode-scanner';\n\nexport default class TransactionScreen extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: '',\n      buttonState: 'normal'\n    }\n  }\n\n  getCameraPermissions = async ()=>{\n    const {status} = await Permissions.askAsync(Permissions.CAMERA);\n\n    this.setState({\n      hasCameraPermissions: status ==='granted',\n      buttonState: 'clicked',\n      scanned: false\n    })\n\n  }\n\n  handleBarCodeScanned = async({type,data}) =>{\n    this.setState({\n      scanned:true,\n      scannedData: data,\n      buttonState:'normal'\n    });\n  }\n\n\n    render(){\n      const hasCameraPermissions=this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n      if(buttonState === 'clicked' && hasCameraPermissions){\n       return(\n          <BarCodeScanner\n          onBarCodeScanned = {scanned? undefined: this.handleBarCodeScanned}\n          style={StyleSheet.absoluteFillObject}\n          />\n       );\n      }\n      else if(buttonState === 'normal'){\n    \n        return(\n            <View style ={styles.container}>\n                <Text style={styles.displayText}>\n                    {  hasCameraPermissions===true? this.state.scannedData: 'Request Camera Permission'} </Text>\n                     <TouchableOpacity onPress ={this.getCameraPermissions} style = {styles.scanButton}>\n                    <Text style={styles.buttonText} >\n                        Scan QR Code\n                    </Text>\n                </TouchableOpacity>\n            </View>\n        );\n\n\n      }\n\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 20,\n    }\n  });","import React from 'react';\nimport {Text,View} from 'react-native';\nimport { render } from 'react-dom';\n\nexport default class SearchScreen extends React.Component{\n    render(){\n        return(\n            <View style ={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n                <Text> Search </Text>\n\n            </View>\n        );\n\n\n    }\n}","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport {createAppContainer} from 'react-navigation';\nimport {createBottomTabNavigator} from 'react-navigation-tabs';\n\nimport TransactionScreen from './screens/BookTransactionScreen.js'\nimport SearchScreen from './screens/SearchScreen.js'\n\nexport default class App extends React.Component {\n  render(){\n    return (\n      <AppContainer/>\n     );\n  }\n  \n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst TabNavigator = createBottomTabNavigator({\n  Transaction: {screen: TransactionScreen},\n  Search: {screen: SearchScreen},\n\n});\n\nconst AppContainer = createAppContainer(TabNavigator);\n"],"sourceRoot":""}